generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  account_type      String? // ADMIN/TEACHER/STUDENT

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Teacher {
  id        String      @id @default(cuid())
  name      String?
  email     String?     @unique
  phone     String?
  Classroom Classroom[]
}

model Student {
  id                 String               @id @default(cuid())
  name               String?
  email              String?              @unique
  phone              String?
  Classroom          Classroom[]
  HomeworkSubmission HomeworkSubmission[]
}

model Classroom {
  id        String     @id @default(cuid())
  name      String?
  teacher   Teacher?   @relation(fields: [teacherId], references: [id])
  teacherId String?
  Student   Student?   @relation(fields: [studentId], references: [id])
  studentId String?
  Homework  Homework[]
}

model Homework {
  id                 String               @id @default(cuid())
  title              String?
  description        String?
  dueDate            DateTime?
  Classroom          Classroom?           @relation(fields: [classroomId], references: [id])
  classroomId        String?
  HomeworkSubmission HomeworkSubmission[]
}

model HomeworkSubmission {
  id            String    @id @default(cuid())
  submission    String?
  Homework      Homework? @relation(fields: [homeworkId], references: [id])
  homeworkId    String?
  Student       Student?  @relation(fields: [studentId], references: [id])
  studentId     String?
  submitedAt    DateTime?
  teacherReview String?
}

// enum UserTypes {
//   ADMIN
//   TEACHER
//   STUDENT
// }
